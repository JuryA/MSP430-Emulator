  switch (opcode) {    
  
  /* CALL SUBROUTINE: 
   *     PUSH PC and PC = SRC
   *     
   *     This is always a word instruction. Supporting all addressing modes
   */
    
  case 0x5:{
    printf("CALL ");
    if (disassemble_mode) break; 
      
    SP -= 2;              /* Decrement Stack pointer by a word */
    uint16_t* stack_addr = get_stack_ptr();    
    *stack_addr = PC;     /* Place old PC onto stack */

    if(as_flag == 0x0){   /* CALL Rn */
                          /* CALL #N */
      
      if (constant_generator_active) {   /* Immediate Mode */
	printf("#0x%04X\n", (uint16_t) immediate_constant);
	PC = (uint16_t) immediate_constant;
      }
      else {   /* Register Mode */
	printf("%s\n", reg_name);
	PC = *reg;
      }
    }

    else if(as_flag == 0x1){   /* CALL 0x0(Rn) */
                               /* CALL #N      */
                               /* CALL 0xN     */
                               /* CALL &0xN    */

      if (constant_generator_active) {
	printf("#0x%04X\n", (uint16_t) immediate_constant);
	PC = (uint16_t) immediate_constant;
      }
      else if (source == 0) {   /* Symbolic Mode */
	int16_t pc_offset = fetch();	
	PC += pc_offset;

	printf("0x%04X\n", (uint16_t) pc_offset);
      }
      else if (source == 2) {   /* Absolute Mode */
	uint16_t absolute_addr = fetch();
	PC = absolute_addr;

	printf("&0x%04X\n", absolute_addr);
      }
      else {                    /* Indexed mode */
	int16_t source_offset = fetch();
	PC = *reg + source_offset;
	
	printf("0x%04X(%s)\n", (uint16_t)source_offset, reg_name);    	
      }
    }

    else if(as_flag == 0x2){   /* CALL @Rn */
                               /* CALL #N  */

      if (constant_generator_active) {   /* Immediate mode (CG1/CG2) */
	PC = immediate_constant;
	printf("#0x%04X\n", (uint16_t) immediate_constant);
      }
      else {   /* Indirect register mode */
	printf("@%s\n", reg_name);	
	PC = *get_addr_ptr(*reg);
      }
    }
    
    else if(as_flag == 0x3){   /* CALL @Rn+ */
                               /* CALL #N   */

      if (constant_generator_active) {   /* Immediate Mode (CG1/CG2) */
	printf("#0x%04X\n", (uint16_t) immediate_constant);
	PC = (uint16_t) immediate_constant;
      }
      else if (source == 0) {   /* Immediate Mode (PC) */
	uint16_t source_value = fetch();
	PC = source_value;
	
	printf("#0x%04X\n", (uint16_t) source_value);
      }
      else {   /* Indirect register auto increment mode */
	printf("@%s+\n", reg_name);
	
	uint16_t *address = get_addr_ptr(*reg);
	PC = *address;
	*reg += 2;
      }
    }
      
    break;
  }